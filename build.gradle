apply plugin: 'java-library'
apply plugin: 'maven-publish'

repositories {
    mavenCentral()
}

configurations {
    jmh
    profiling
}

group = 'myworld'
version = '0.0.1-SNAPSHOT'

dependencies {

    testImplementation 'org.apache.groovy:groovy:4.0.21'
    testImplementation 'org.spockframework:spock-core:2.3-groovy-4.0'

    jmh 'org.openjdk.jmh:jmh-core:1.37'
    jmh 'org.openjdk.jmh:jmh-generator-annprocess:1.37'
}

test {
    useJUnitPlatform()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
    }

    profiling {
        java {
            srcDir 'src/profiling/java'
            compileClasspath += main.compileClasspath + main.output + project.configurations.jmh + test.output
            runtimeClasspath += main.output
        }
        resources {
            srcDir 'src/test/resources'
            srcDir 'src/profiling/resources'
        }
    }

    jmh {
        java {
            srcDir 'src/jmh/java'
            compileClasspath += main.compileClasspath + main.output + project.configurations.jmh + test.output
            runtimeClasspath += main.output
            annotationProcessorPath = project.configurations.jmh

        }
        resources {
            srcDir 'src/jmh/resources'
        }
    }
}

task jmhCompile(type: JavaCompile, dependsOn: jmhClasses) {
    javaCompiler = javaToolchains.compilerFor {
        languageVersion = JavaLanguageVersion.of(21)
    }
    source file('build/generated/sources/annotationProcessor/java/jmh/')
    classpath = sourceSets.jmh.runtimeClasspath +
            sourceSets.jmh.compileClasspath +
            sourceSets.jmh.output

    destinationDirectory.set(file('build/classes/java/jmh'))
}

task jmh(type: JavaExec, dependsOn: jmhCompile) {
    javaLauncher = javaToolchains.launcherFor {
        languageVersion = JavaLanguageVersion.of(21)
    }

    mainClass = 'myworld.hummingbird.benchmark.Benchmarks'

    classpath = sourceSets.jmh.runtimeClasspath +
            sourceSets.jmh.compileClasspath +
            sourceSets.jmh.output
}

tasks.named("processJmhResources") {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

tasks.named("processProfilingResources") {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

task runProfiler(type:JavaExec) {
    javaLauncher = javaToolchains.launcherFor {
        languageVersion = JavaLanguageVersion.of(21)
    }

    mainClass = 'myworld.hummingbird.profiling.Profiler'

    classpath = sourceSets.profiling.runtimeClasspath + sourceSets.profiling.compileClasspath
}

publishing {
    publications {
        hummingbird(MavenPublication) {
            groupId = "${project.group}"
            artifactId = 'hummingbird'
            version = "${project.version}"

            from components.java
        }
    }

    repositories {
        mavenLocal()
    }
}